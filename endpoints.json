{
    "endpoints": [
        {
            "/api/token": {
                "post": {
                    "body": {
                        "username": "21EPCCS033",
                        "password": "21EPCCS033"
                    },
                    "response": {
                        "status": 200,
                        "id": "1000",
                        "first_name": "Satyam",
                        "last_name": "Mishra",
                        "username": "21EPCCS033",
                        "branch": "CSE",
                        "batch": 2025,
                        "email": "satyam@test.it",
                        "phone": "09832783020",
                        "access": "ahfbksndfonsodvljrnou",
                        "refresh": "sad cjkdsnoucndsonviounsd"
                    }
                }
            },
            "/api/user": {
                "put": {
                    "body": {
                        "id": "1000",
                        "name": "Satyam Mishra",
                        "username": "21EPCCS033",
                        "branch": "CSE",
                        "batch": 2025,
                        "email": "satyam@test.it",
                        "phone": "09832783020"
                    },
                    "response": {
                        "status": 200
                    }
                }
            },
            "/api/contest": {
                "get": {
                    "response": [
                        {
                            "id": "contest.id",
                            "name": "contest.name",
                            "description": "contest.description",
                            "start_time": "contest.start_time",
                            "end_time": "contest.end_time",
                            "problems": [
                                {
                                    "id": "problem.id",
                                    "title": "problem.title",
                                    "points": "problem.points",
                                    "difficulty": "problem.difficulty"
                                }
                            ]
                        }
                    ]
                }
            },
            "/api/problem": {
                "get": {
                    "parameters": {
                        "id": "problem.id"
                    },
                    "response": {
                        "id": "problem.id",
                        "title": "problem.title",
                        "description": "problem.description",
                        "input": "problem.input",
                        "output": "problem.output",
                        "constraints": "problem.constraints",
                        "points": "problem.points",
                        "difficulty": "problem.difficulty"
                    }
                }
            },
            "/api/compile": {
                "post": {
                    "body": {
                        "code": "Uses's Code",
                        "lang": "py",
                        "pid": "problem's id"
                    },
                    "response": {
                        "status": "pass/compile error/runtime error/wrong submission",
                        "testcase-passed": "10/10",
                        "error": "Memory Overflow at line 22"
                    }
                }
            },
            "/api/submission": {
                "post": {
                    "body": {
                        "lang": "py",
                        "code": "print('Hello, World!')",
                        "pid": "problem's id"
                    },
                    "response": {
                        "problem_id": "problem's id",
                        "total_testcases":10,
                        "testcases_passed": 1,
                        "failed_cases": [],
                        "time_taken": "time in seconds",
                        "language": "py"
                    }
                }
            },
            "/api/run_code": {
                "post": {
                    "body": {
                        "lang": "py",
                        "code": "print('Hello, World!')",
                        "input": "input data for the code"
                    },
                    "response": {
                        "output": "Hello, World!",
                        "status": 200
                    }
                }
            }
        }
    ]
}